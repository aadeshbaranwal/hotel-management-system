{"ast":null,"code":"import store from \"../store/store\";\n\nfunction addNewuser(data) {\n  console.log(\"getting data\", data);\n  fetch('http://localhost:5000/signup', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(data => data.json()).then(response => {\n    console.log(\"success :\", response);\n  }).catch(err => {\n    console.log('error', err);\n  });\n}\n\nfunction addRoom(data) {\n  console.log(\"adding room\");\n  fetch('http://localhost:5000/admin-page/addroom', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(data => data.json()).then(response => {\n    console.log(\"success :\", response);\n  }).catch(err => {\n    console.log(\"error\", err);\n  });\n}\n\nfunction verifyLoginDetails(history, getData, dispatch, props) {\n  console.log(\"getting data\", getData, history, dispatch, props);\n  fetch('http://localhost:5000/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(getData)\n  }).then(data => data.json()).then(response => {\n    console.log(\"success :\", response);\n\n    if (response.success === true) {\n      localStorage.setItem(\"signupData\", JSON.stringify(response.user));\n      console.log(response.user);\n      store.dispatch({\n        type: \"ADD_USER\",\n        userData: response.user\n      });\n      alert(\"Login Successfully\");\n      return true;\n    } else {\n      alert(\"wrong credentials\");\n      return false;\n    }\n  }).then(() => {\n    if (getData.email === 'admin@gmail.com') history.push(\"/admin-page\");else history.push(\"/home\");\n  }).catch(err => {\n    console.log('error', err);\n    return false;\n  });\n}\n\nfunction updateProfile(userData, userId) {\n  console.log(\"recevied data\", userData, \"user ID\", userId);\n  fetch(`http://localhost:5000/user/${userId}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userData)\n  }).then(data => data.json()).then(response => {\n    console.log(\"success :\", response);\n\n    if (response.success === true) {\n      // window.location.reload()\n      localStorage.setItem(\"signupData\", JSON.stringify(response.user));\n      store.dispatch({\n        type: \"UPDATE_USER_DETAILS\",\n        userData: response.user\n      });\n      alert(\"update Successfully\");\n      return true;\n    }\n  }).catch(err => {\n    console.log('error', err);\n  });\n}\n\nfunction getUserBookings(data) {\n  console.log(\"inside booking details\");\n\n  if (data.username) {\n    fetch(\"http://localhost:5000/profile\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(data => data.json()).then(response => {\n      console.log(\"booking details: \", response);\n      return response;\n    }).catch(err => {\n      console.log(\"error: \", err);\n    });\n  } else {\n    console.log(\"username does not exist\");\n  }\n}\n\nfunction getuser() {\n  fetch(\"http://localhost:5000/allusers\").then(data => data.json()).then(response => {\n    console.log(\"responese \", response);\n  });\n}\n\nfunction bookRoom(data, type, id) {\n  data.type = type;\n  console.log(\"book room api: \", data);\n  fetch(`http://localhost:5000/roomView/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(data => data.json()).then(response => {\n    console.log(\"book room success: \", response);\n  }).catch(err => console.log(\"book room error:\", err));\n}\n\nexport { addNewuser, getuser, verifyLoginDetails, updateProfile, addRoom, getUserBookings, bookRoom };","map":{"version":3,"sources":["C:/Users/pc/Desktop/project/oxotel-au3/oxotel/src/api/api.js"],"names":["store","addNewuser","data","console","log","fetch","method","headers","body","JSON","stringify","then","json","response","catch","err","addRoom","verifyLoginDetails","history","getData","dispatch","props","success","localStorage","setItem","user","type","userData","alert","email","push","updateProfile","userId","getUserBookings","username","getuser","bookRoom","id"],"mappings":"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","sourcesContent":["import store from \"../store/store\";\r\n\r\nfunction addNewuser(data) {\r\n    console.log(\"getting data\", data)\r\n\r\n    fetch('http://localhost:5000/signup', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data)\r\n    })\r\n        .then((data) => data.json())\r\n        .then(response => {\r\n            console.log(\"success :\", response)\r\n        })\r\n        .catch((err) => {\r\n            console.log('error', err)\r\n        })\r\n}\r\n\r\nfunction addRoom(data){\r\n    console.log(\"adding room\");\r\n\r\n    fetch('http://localhost:5000/admin-page/addroom', {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data)\r\n    })\r\n        .then((data) => data.json())\r\n        .then(response => {\r\n            console.log(\"success :\", response)\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"error\", err)\r\n        })\r\n}\r\n\r\nfunction verifyLoginDetails(history, getData, dispatch, props) {\r\n    console.log(\"getting data\", getData, history, dispatch, props)\r\n\r\n    fetch('http://localhost:5000/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(getData)\r\n    })\r\n        .then((data) => data.json())\r\n        .then(response => {\r\n            console.log(\"success :\", response)\r\n            if (response.success === true) {\r\n                localStorage.setItem(\"signupData\", JSON.stringify(response.user));\r\n                console.log(response.user)\r\n\r\n                store.dispatch({\r\n                    type: \"ADD_USER\",\r\n                    userData: response.user\r\n                });\r\n\r\n                alert(\"Login Successfully\")\r\n                return true\r\n            }\r\n            else {\r\n                alert(\"wrong credentials\")\r\n                return false\r\n            }\r\n        }).then(() => {\r\n            if(getData.email === 'admin@gmail.com')\r\n                history.push(\"/admin-page\")\r\n            else\r\n                history.push(\"/home\")\r\n        })\r\n        .catch((err) => {\r\n            console.log('error', err)\r\n            return false\r\n        })\r\n}\r\n\r\nfunction updateProfile(userData, userId) {\r\n    console.log(\"recevied data\", userData, \"user ID\", userId)\r\n    fetch(`http://localhost:5000/user/${userId}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(userData)\r\n    })\r\n        .then((data) => data.json())\r\n        .then(response => {\r\n            console.log(\"success :\", response)\r\n            if (response.success === true) {\r\n                // window.location.reload()\r\n                localStorage.setItem(\"signupData\", JSON.stringify(response.user));\r\n\r\n                store.dispatch({\r\n                    type: \"UPDATE_USER_DETAILS\",\r\n                    userData: response.user\r\n                });\r\n\r\n                alert(\"update Successfully\")\r\n                return true\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log('error', err)\r\n        })\r\n\r\n\r\n}\r\n\r\nfunction getUserBookings(data) {\r\n    console.log(\"inside booking details\")\r\n    if(data.username){\r\n        fetch(\"http://localhost:5000/profile\", {\r\n            method: 'POST',\r\n            headers:{ 'Content-Type':'application/json' },\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then((data) => data.json())\r\n        .then(response => {\r\n            console.log(\"booking details: \", response)\r\n            return response;\r\n        })\r\n        .catch(err => {\r\n            console.log(\"error: \", err)\r\n        })\r\n    }\r\n    else{\r\n        console.log(\"username does not exist\")\r\n    }\r\n}\r\n\r\nfunction getuser() {\r\n    fetch(\"http://localhost:5000/allusers\")\r\n        .then((data) => data.json())\r\n        .then(response => {\r\n            console.log(\"responese \", response)\r\n        })\r\n}\r\n\r\nfunction bookRoom(data,type,id){\r\n    data.type=type\r\n\r\n    console.log(\"book room api: \", data)\r\n\r\n    fetch(`http://localhost:5000/roomView/${id}`, {\r\n        method: 'PUT',\r\n        headers: {'Content-Type':'application/json'},\r\n        body: JSON.stringify(data)\r\n    })\r\n        .then(data => data.json())\r\n        .then(response => {\r\n            console.log(\"book room success: \", response)\r\n        })\r\n        .catch(err => \r\n            console.log(\"book room error:\",err)\r\n        )\r\n}\r\n\r\nexport { addNewuser, getuser, verifyLoginDetails, updateProfile, addRoom, getUserBookings, bookRoom };"]},"metadata":{},"sourceType":"module"}